USE DATABASE [dev-westus-v2];
DECLARE EXTERNAL @SliceStart = "20171101";
DECLARE EXTERNAL @SliceEnd = "20180430";

DECLARE @inputFileSnotel string = "/snotel-merged-csv-westus-v1.1/{date:yyyy}/{date:MM}/{date:dd}/{date:yyyy}{date:MM}{date:dd}" + ".{__fileHour}.snotel.csv";

//slice start needs to look back one day for snotel since its one day behind for a complete dataset

//2. Extract all snotel data
@snotelData =
    EXTRACT DateString string,
            StationName string,
            ElevationFt float,
            Lat double,
            Lon double,
            SnowWaterEquivalentIn float?,
            PrecipitationAccumulation float?,
            SnowDepthIn float?,
            AirTemperatureObservedF float?,
            SnotelState string,
            date DateTime,
            __fileHour int
    FROM @inputFileSnotel
    USING Extractors.Csv(skipFirstNRows : 1, silent: true, quoting : false);

@snotelData =
    SELECT DateTime.ParseExact(DateString, "yyyyMMdd HH:00", null) AS Date,
           DateString,
           StationName,
           (int)ElevationFt AS ElevationFt,
           Lat,
           Lon,
           SnowWaterEquivalentIn,
           PrecipitationAccumulation,
           (int?)SnowDepthIn AS SnowDepthIn,
           (int?)AirTemperatureObservedF AS AirTemperatureObservedF,
           SnotelState,
           __fileHour
    FROM @snotelData
    WHERE __fileHour < 24
          AND date BETWEEN DateTime.ParseExact(@SliceStart, "yyyyMMdd", null) AND DateTime.ParseExact(@SliceEnd, "yyyyMMdd", null);

@snotelData =
    SELECT Date,
           DateString,
           StationName,
           (int)ElevationFt AS ElevationFt,
           Lat,
           Lon,
           SnowWaterEquivalentIn,
           PrecipitationAccumulation,
           (int?)SnowDepthIn AS SnowDepthIn,
           (int?)AirTemperatureObservedF AS AirTemperatureObservedF,
           SnotelState,
           Date.Hour AS __fileHour, //overwrite __fileHour and __fileDate with dates from readings in the file as these can drift (file date might be one hour off of the actual reading date/time which causes issues in grouping if not cleaned up)
           Date.Date AS __fileDate 
    FROM @snotelData;

@snotelData = 
    SELECT Date.Date AS DatePart,
           *
    FROM @snotelData;

//  CREATE TABLE IF NOT EXISTS dbo.HourlySnotelReadings
//  ( 
//      INDEX idx  
//      CLUSTERED(DatePart ASC, Lat, Lon)
//      DISTRIBUTED BY RANGE(DatePart) 
//  ) AS SELECT * FROM @snotelData;
//
INSERT INTO dbo.HourlySnotelReadings
(
  DatePart,
  Date,
  DateString,
  StationName,
  ElevationFt,
  Lat,
  Lon,
  SnowWaterEquivalentIn,
  PrecipitationAccumulation,
  SnowDepthIn,
  AirTemperatureObservedF,
  SnotelState,
  __fileHour,
  __fileDate
)
SELECT *
FROM @snotelData;